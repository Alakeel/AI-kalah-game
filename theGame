import java.util.Scanner;

/*
 * Created by bitch Alakeel - 3/19/2015  
 * 
 */

/*
 * 			Version (1.5)
 */


/* NEED TO DO:
 * 
 * - Extra Match repeating for move for one player 
 * - Steal point 
 * -------------------------------------------- END OF GAME MANUAL MODE
 * 
 * 							(NEXT STEP)
 * - Algorithm for Auto mode (IF's , Random input)
 * - Twitter  
 * - GUI ( Interface ) 
 *  
 */

public class theGame {
	static boolean win = false;
	static boolean result = false;
	static int[] A = new int [40];
	static Scanner scanner = new Scanner(System.in);


	public static void main(String[] args){
		// input and output to start the game
		startGame();

		// display is always used after each move
		displayTable();

		//

		do{
			move();
			displayTable();
			move2();
			displayTable();
			result = results();
		}while(result!=true);

		System.out.println("End Of The Game");
	}


	public static void startGame(){

		for(int i=0;i<A.length;i++){
			A[i]=3;
		}
		A[6]= 0;
		A[13]= 0;

	}

	public static void displayTable(){

		System.out.print("\n------------------------------------------\n");
		System.out.print("\t ");
		for(int i=5;i>=0;i--)
		{
			System.out.print("[" + A[i] +"]");
		}
		System.out.println();
		System.out.println("[" + A[6] + "]\t\t\t" + "\t   [" + A[13] + "]");
		System.out.print("\t ");
		for(int i=7;i<=12;i++){
			System.out.print("[" + A[i] +"]");
		}

		System.out.print("\n------------------------------------------\n");
	}	

	public static void move(){
		int value = 0;
		System.out.print("Player 1 Enter move: ");
		int in = scanner.nextInt();
		// done entering command.

		if(in > 5 || in < 0)
		{
			System.out.println("ERROR: Invalid Move");
			move();
		}	
		else if(A[in]==0){
			System.out.println("ERROR: Empty Spot");
			move();
		}
		else{
			int k=0;
			int i;
			int loc = 0;
			int steal = 99;
			value = A[in];
			for(i=1;i<=value;i++){
				loc = i+in;
				steal = A[loc];
				A[loc]= ++A[loc];
				if(loc>=14){
					for(int j=value;j<=value;j++){
						loc = k;
						steal = A[loc];
						A[loc]= ++A[loc];
						k++;
					}
				}
			}
			A[in]= 0;
			
			if(i==++value&&loc==6){
				displayTable();
				move();
			}
			else if(i==value&&steal==0){
				System.out.println("STOLEN =D");
				if(loc==0){
					A[6]+= A[12] + A[0];
					A[12] = 0;
					A[0] = 0;
				}
				else if(loc==1){
					A[6]+= A[11] + A[1];
					A[11] = 0;
					A[1] = 0;
				}
				else if(loc==2){
					A[6]+= A[10] + A[2];
					A[10] = 0;
					A[2] = 0;
				}
				else if(loc==3){
					A[6]+= A[9] + A[3];
					A[9] = 0;
					A[3] = 0;
				}
				else if(loc==4){
					A[6]+= A[8] + A[4];
					A[8] = 0;
					A[4] = 0;
				}
				else if(loc==5){
					A[6]+= A[7] + A[5];
					A[7] = 0;
					A[5] = 0;
				}
			}
		}

	}

	public static void move2(){
		int value = 0;
		System.out.print("Player 2 enter move: ");
		int in = scanner.nextInt();
		// done entering command.

		if(in < 7 || in > 12)
		{
			System.out.println("ERROR: Invalid Move");
			move2();
		}	
		else if(A[in]==0){
			System.out.println("ERROR: Empty Spot");
			move2();
		}
		else{
			int k=0;
			int i;
			int loc = 0;
			int steal = 99;
			value = A[in];
			for(i=1;i<=value;i++){
				loc = i+in;
				steal = A[loc];
				A[loc]= ++A[loc];
				if(loc>=14){
					for(int j=value;j<=value;j++){
						loc = k;
						steal = A[loc];
						A[loc]= ++A[loc];
						k++;
					}
				}
			}
			A[in]= 0;
			
			if(i==++value&&loc==13){
				displayTable();
				move2();
			}
			else if(i==value&&steal==0){
				System.out.println("STOLEN =D");
				if(loc==12){
					A[13]+= A[12] + A[0];
					A[0] = 0;
					A[12] = 0;
				}
				else if(loc==11){
					A[13]+= A[11] + A[1];
					A[1] = 0;
					A[11] = 0;
				}
				else if(loc==10){
					A[13]+= A[10] + A[2];
					A[2] = 0;
					A[10] = 0;
				}
				else if(loc==9){
					A[13]+= A[9] + A[3];
					A[3] = 0;
					A[9] = 0;
				}
				else if(loc==8){
					A[13]+= A[8] + A[4];
					A[4] = 0;
					A[8] = 0;
				}
				else if(loc==7){
					A[13]+= A[7] + A[5];
					A[5] = 0;
					A[7] = 0;
				}
			}
		}		
	}

	public static boolean results(){


		if((A[0]==0&&A[1]==0&&A[2]==0&&A[3]==0&&A[4]==0&&A[5]==0)||(A[7]==0&&A[8]==0&&A[9]==0&&A[10]==0&&A[11]==0&&A[12]==0)){
			System.out.println("You won prashakar is the best!!!!!\n");
			result=true;
		}

		return result;
	}

}
